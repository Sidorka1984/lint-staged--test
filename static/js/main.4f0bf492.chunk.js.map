{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Value","value","Counter","state","props","initialValue","handlerIncrement","setState","prevState","handlerDecrement","this","React","Component","defaultProps","Dropdown","visible","toggle","show","hide","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","optionClasses","push","join","label","options","map","color","style","backgroundColor","TodoList","todos","onDeleteTodo","id","text","colorPickerOptions","App","initialTodos","deleteTodo","todoId","filter","todo","totalTodoCount","length","completedTodoCount","reduce","total","completed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f0bf492.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import React from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Counter.css';\n\nclass Counter extends React.Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handlerIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handlerDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div className=\"Counter\">\n        <Value value={value} />\n\n        <Controls\n          onIncrement={this.handlerIncrement}\n          onDecrement={this.handlerDecrement}\n        />\n      </div>\n    );\n  }\n}\nexport default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  show = () => {\n    this.setState({ visible: true });\n  };\n\n  hide = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <div className=\"Dropdown\">\n        <button\n          type=\"button\"\n          className=\"Dropdown__toggle\"\n          onClick={this.toggle}\n        >\n          {visible ? 'Скрыть' : 'Показать'}\n        </button>\n        {visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    const optionClasses = ['ColorPicker__option'];\n    if (index === this.state.activeOptionIdx) {\n      optionClasses.push('ColorPicker__option--active');\n    }\n    return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Выбран цвет: {label}</p>\n        <div>\n          {this.props.options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={this.makeOptionClassName(index)}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","import React from 'react';\nimport './TodoList.css';\n\nconst TodoList = ({ todos, onDeleteTodo }) => (\n  <ul className=\"TodoList \">\n    {todos.map(({ id, text }) => (\n      <li key={id} className=\"TodoList__item\">\n        <p className=\"TodoList__text\">{text}</p>\n        <button onClick={() => onDeleteTodo(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","// import logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Counter from './components/Counter';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\nimport TodoList from './components/TodoList';\nimport initialTodos from './todos.json';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F5185' },\n];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n  };\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  render() {\n    const { todos } = this.state;\n\n    const totalTodoCount = todos.length;\n\n    const completedTodoCount = todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n\n    return (\n      <>\n        <h1>Состояние документа</h1>\n        <div>\n          <p>Общее кол-во: {totalTodoCount}</p>\n          <p>Кол-во выполненных: {completedTodoCount}</p>\n        </div>\n        <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n        <ColorPicker options={colorPickerOptions} />\n        <Counter />\n        <Dropdown />\n      </>\n    );\n  }\n}\n// const App = () => (\n//   <>\n//     <h1>Состояние документа</h1>\n//     <ColorPicker options = {colorPickerOptions} />\n//     <Counter />\n//     <Dropdown />\n//     <TodoList />\n\n//   </>\n// )\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}