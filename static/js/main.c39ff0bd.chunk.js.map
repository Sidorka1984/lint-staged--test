{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.js","components/Dropdown/Dropdown.js","components/ColorPicker/ColorPicker.js","components/TodoList/Form.js","components/Container/Container.js","App.js","index.js"],"names":["Controls","onIncrement","onDecrement","className","type","onClick","Value","value","Counter","state","props","initialValue","handlerIncrement","setState","prevState","handlerDecrement","this","React","Component","defaultProps","Dropdown","visible","toggle","show","hide","ColorPicker","activeOptionIdx","setActiveIdx","index","makeOptionClassName","classNames","label","options","map","color","style","backgroundColor","Form","name","tag","experience","licence","nameInputId","shortid","generate","tagInputId","handleChange","e","currentTarget","handleSubmit","preventDefault","console","log","onSubmit","reset","handleLicenceChange","checked","htmlFor","onChange","id","disabled","Container","children","colorPickerOptions","App","todos","initialTodos","filter","addTodo","text","todo","completed","deleteTodo","todoId","toggleCompleted","formSubmitHandler","data","setTimeout","changeFilter","getVisibleTodos","normalizedFilter","toLowerCase","includes","calculateCompletedTodos","reduce","total","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c39ff0bd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ onIncrement, onDecrement }) => (\n  <div className=\"Counter__controls\">\n    <button type=\"button\" onClick={onIncrement}>\n      Увеличить на 1\n    </button>\n    <button type=\"button\" onClick={onDecrement}>\n      Уменьшить на 1\n    </button>\n  </div>\n);\nexport default Controls;\n","import React from 'react';\n\nconst Value = ({ value }) => <span className=\"Counter__value\">{value}</span>;\n\nexport default Value;\n","import React from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Counter.css';\n\nclass Counter extends React.Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    value: this.props.initialValue,\n  };\n\n  handlerIncrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handlerDecrement = () => {\n    this.setState(prevState => ({\n      value: prevState.value - 1,\n    }));\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div className=\"Counter\">\n        <Value value={value} />\n\n        <Controls\n          onIncrement={this.handlerIncrement}\n          onDecrement={this.handlerDecrement}\n        />\n      </div>\n    );\n  }\n}\nexport default Counter;\n","import React, { Component } from 'react';\nimport './Dropdown.css';\n\nclass Dropdown extends Component {\n  state = {\n    visible: false,\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({\n      visible: !prevState.visible,\n    }));\n  };\n\n  show = () => {\n    this.setState({ visible: true });\n  };\n\n  hide = () => {\n    this.setState({ visible: false });\n  };\n\n  render() {\n    const { visible } = this.state;\n    return (\n      <div className=\"Dropdown\">\n        <button\n          type=\"button\"\n          className=\"Dropdown__toggle\"\n          onClick={this.toggle}\n        >\n          {visible ? 'Скрыть' : 'Показать'}\n        </button>\n        {visible && <div className=\"Dropdown__menu\">Выпадающее меню</div>}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport './ColorPicker.css';\n\nclass ColorPicker extends Component {\n  state = {\n    activeOptionIdx: 0,\n  };\n\n  setActiveIdx = index => {\n    this.setState({ activeOptionIdx: index });\n  };\n\n  makeOptionClassName = index => {\n    return classNames('ColorPicker__option', {\n      'ColorPicker__option--active': index === this.state.activeOptionIdx,\n    });\n\n    //   console.log(clsx);\n\n    //   const optionClasses = ['ColorPicker__option'];\n    //   if (index === this.state.activeOptionIdx) {\n    //     optionClasses.push('ColorPicker__option--active');\n    //   }\n    //   return optionClasses.join(' ');\n  };\n\n  render() {\n    const { activeOptionIdx } = this.state;\n    const { options } = this.props;\n    const { label } = options[activeOptionIdx];\n\n    return (\n      <div className=\"ColorPicker\">\n        <h2 className=\"ColorPicker__title\">Color Picker</h2>\n        <p>Выбран цвет: {label}</p>\n        <div>\n          {this.props.options.map(({ label, color }, index) => (\n            <button\n              key={label}\n              className={classNames('ColorPicker__option', {\n                'ColorPicker__option--active': index === activeOptionIdx,\n              })}\n              style={{ backgroundColor: color }}\n              onClick={() => this.setActiveIdx(index)}\n            ></button>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ColorPicker;\n","// import { render } from \"@testing-library/react\";\nimport React, { Component } from 'react';\nimport shortid from 'shortid';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    tag: '',\n    experience: 'junior',\n    licence: false,\n  };\n  nameInputId = shortid.generate();\n  tagInputId = shortid.generate();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleLicenceChange = e => {\n    console.log(e.currentTarget.checked);\n    this.setState({ licence: e.currentTarget.checked });\n  };\n\n  reset = () => {\n    this.setState({ name: '', tag: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Имя\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label htmlFor={this.tagInputId}>\n          Прозвище\n          <input\n            type=\"text\"\n            name=\"tag\"\n            value={this.state.tag}\n            onChange={this.handleChange}\n            id={this.tagInputId}\n          />\n        </label>\n        <p>Ваш уровень:</p>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"junior\"\n            onChange={this.handleChange}\n            checked={this.state.experience === 'junior'}\n          />\n          Junior\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"middle\"\n            onChange={this.handleChange}\n            checked={this.state.experience === 'middle'}\n          />\n          Middle\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"experience\"\n            value=\"senior\"\n            onChange={this.handleChange}\n            checked={this.state.experience === 'senior'}\n          />\n          Senior\n        </label>\n\n        <br />\n\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"licence\"\n            checked={this.state.licence}\n            onChange={this.handleLicenceChange}\n          />\n          Согласен с условием\n        </label>\n\n        <button type=\"submit\" disabled={!this.state.licence}>\n          Отправить\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport './Container.css';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","// import logo from \"./logo.svg\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Counter from './components/Counter';\nimport shortid from 'shortid';\nimport Dropdown from './components/Dropdown';\nimport ColorPicker from './components/ColorPicker';\n// import TodoList from './components/TodoList';\n// import TodoEditor from './components/TodoEditor';\nimport Form from './components/TodoList/Form';\nimport initialTodos from './todos.json';\nimport Container from './components/Container/Container';\n// import Filter from './components/Filter';\n\nconst colorPickerOptions = [\n  { label: 'red', color: '#F44336' },\n  { label: 'green', color: '#4CAF50' },\n  { label: 'blue', color: '#2196F3' },\n  { label: 'grey', color: '#607D8B' },\n  { label: 'pink', color: '#E91E63' },\n  { label: 'indigo', color: '#3F5185' },\n];\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n  addTodo = text => {\n    const todo = {\n      id: shortid.generate(),\n      text,\n      completed: false,\n    };\n\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  toggleCompleted = todoId => {\n    // console.log(todoId);\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todo.id === todoId) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed\n    //       };\n    //     }\n    //     return todo;\n    //   }),\n    // }));\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todo.id === todoId ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    setTimeout(() => {\n      console.log(data);\n    }, 1000);\n  };\n\n  // handleNameChange = event => {\n  //   // console.log(event.currentTarget.value);\n  //   this.setState({ name: event.currentTarget.value });\n  // }\n\n  // handleTagChange = event => {\n  //   this.setState({ tag: event.currentTarget.value });\n  // };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleTodos = () => {\n    const { filter, todos } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  calculateCompletedTodos = () => {\n    const { todos } = this.state;\n\n    return todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n  };\n\n  render() {\n    // const { todos, filter } = this.state;\n\n    // const totalTodoCount = todos.length;\n\n    // const completedTodoCount = this.calculateCompletedTodos();\n    //  const visibleTodos = this.getVisibleTodos();\n\n    return (\n      <Container>\n        <Form onSubmit={this.formSubmitHandler} />\n\n        {/* <input\n          type=\"text\"\n          value={this.state.inputValue}\n          onChange={this.handleInputChange} /> */}\n        {/* <h1>Состояние документа</h1>\n        <div>\n          <p>Общее кол-во: {totalTodoCount}</p>\n          <p>выполненных: {completedTodoCount}</p>\n        </div>\n          <TodoEditor onSubmit={this.addTodo} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        /> */}\n        <ColorPicker options={colorPickerOptions} />\n        <Counter />\n        <Dropdown />\n      </Container>\n    );\n  }\n}\n// const App = () => (\n//   <>\n//     <h1>Состояние документа</h1>\n//     <ColorPicker options = {colorPickerOptions} />\n//     <Counter />\n//     <Dropdown />\n//     <TodoList />\n\n//   </>\n// )\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}